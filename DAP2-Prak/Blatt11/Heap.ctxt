#BlueJ class context
comment0.params=n
comment0.target=Heap(int)
comment1.params=i
comment1.target=int\ left(int)
comment1.text=\n\ Gibt\ den\ Index\ des\ linken\ Kindes\ zur\u00FCck\n
comment2.params=i
comment2.target=int\ right(int)
comment2.text=\n\ Gibt\ den\ Index\ des\ rechten\ Kindes\ zur\u00FCck\n
comment3.params=i
comment3.target=int\ parent(int)
comment3.text=\n\ Gibt\ den\ Index\ des\ Elternknotens\ zur\u00FCck\n
comment4.params=i
comment4.target=void\ heapify(int)
comment4.text=\n\ Stellt\ die\ Heap-Struktur\ f\u00FCr\ den\ Knoten\ mit\ Index\ i\ und\ dessen\ Kinder\ her\n
comment5.params=key
comment5.target=void\ insert(int)
comment5.text=\n\ F\u00FCgt\ einen\ neuen\ Knoten\ mit\ dem\ Schl\u00FCssel\ key\ ein\n\ Die\ Heap-Stuktur\ wird\ NICHT\ automatisch\ hergestellt\n
comment6.params=
comment6.target=int\ extractMax()
comment6.text=\n\ Entfernt\ das\ gr\u00F6\u00DFte\ Element\ aus\ dem\ Heap\ und\ gibt\ es\ zur\u00FCck.\ Die\ Heap-Struktur\ wird\ wiederhergestellt\n
comment7.params=
comment7.target=void\ printHeap()
comment7.text=\n\ Gibt\ den\ Heap\ aus\n
numComments=8
