#BlueJ class context
comment0.params=args
comment0.target=void\ main(java.lang.String[])
comment1.params=arr
comment1.target=void\ ausgabe(Interval[])
comment1.text=\n\ Gibt\ das\ \u00FCbergebene\ Array\ formatiert\ aus\n
comment10.params=arr\ p\ r
comment10.target=void\ mergeSort(Interval[],\ int,\ int)
comment11.params=intArr\ p\ q\ r
comment11.target=void\ merge(Interval[],\ int,\ int,\ int)
comment2.params=arr
comment2.target=void\ ausgabe(int[])
comment2.text=\n\ Ausgabe-Methode\ f\u00FCr\ den\ Lateness-Algo\n
comment3.params=pfad
comment3.target=Interval[]\ dateiEinlesen(java.lang.String)
comment3.text=\n\ Liest\ die\ Datei\ im\ \u00FCbergebenen\ Pfad\ ein\ und\ gibt\ ein\ Array\ mit\ den\ gefundenen\ Intervallen\ aus\n
comment4.params=schedule\ jobarr
comment4.target=int\ maxDelay(int[],\ Job[])
comment4.text=\n\ Berechnet\ die\ maximale\ Verz\u00F6gerung\ des\ \u00FCbergebenen\ Jobarrays\ mit\ dem\ \u00FCbergebenen\ Schedule\n
comment5.params=arr
comment5.target=Job[]\ convertArray(Interval[])
comment5.text=\n\ Konvertiert\ ein\ Interval-Array\ zu\ einem\ Job-Array\n
comment6.params=arr
comment6.target=int[]\ latenessScheduling(Job[])
comment6.text=\n\ Lateness-Scheduling-Algorithmus\ aus\ der\ Vorlesung\n
comment7.params=array
comment7.target=java.util.ArrayList\ intervalScheduling(Interval[])
comment7.text=\n\ Wendet\ Intervalscheduling\ auf\ das\ \u00FCbergebene\ Array\ aus\n
comment8.params=
comment8.target=void\ syntaxteller()
comment8.text=\n\ Hilfsmethode\ zur\ Ausgabe\ des\ korrekten\ Syntax\n
comment9.params=array
comment9.target=void\ mergeSort(Interval[])
numComments=12
